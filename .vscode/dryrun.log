make --dry-run --keep-going --print-directory
make: Entering directory '/home/kojiki/42/local/ft_irc'
printf "\033[0;34mCompiling \033[1;35mmain \033[0;34mfunctions\033[0m\n"
find ./objs/ -type f -exec touch {} +
printf "[..]   \033[0m \033[1;35mIrcServ.cpp \033[0m\n"; c++ -I includes -Wall -Werror -Wextra -std=c++98 -O3 -c srcs/IrcServ.cpp -o objs/IrcServ.o ; if [ $? -ne "0" ]; then exit 1; fi; norminette srcs/IrcServ.cpp > /dev/null ; if [ $? -ne "0" ]; then printf "\033[F\033[0;31m[NORM]\033[0m \033[1;35m IrcServ.cpp\033[0m\n"; else printf "\033[F\033[0;32m[OK]  \033[0m \033[1;35m IrcServ.cpp\033[0m\n"; fi;
printf "\033[0;34mCompiling \033[1;35mmain \033[0;34mfunctions\033[0m\n"
find ./objs/ -type f -exec touch {} +
printf "[..]   \033[0m \033[1;35mIrcServ.cpp \033[0m\n"; c++ -I includes -Wall -Werror -Wextra -std=c++98 -O3 -c srcs/IrcServ.cpp -o objs/IrcServ.o ; if [ $? -ne "0" ]; then exit 1; fi; norminette srcs/IrcServ.cpp > /dev/null ; if [ $? -ne "0" ]; then printf "\033[F\033[0;31m[NORM]\033[0m \033[1;35m IrcServ.cpp\033[0m\n"; else printf "\033[F\033[0;32m[OK]  \033[0m \033[1;35m IrcServ.cpp\033[0m\n"; fi;
printf "\033[0;34mCompiling \033[1;35mmain \033[0;34mfunctions\033[0m\n"
find ./objs/ -type f -exec touch {} +
printf "[..]   \033[0m \033[1;35mIrcServ.cpp \033[0m\n"; c++ -I includes -Wall -Werror -Wextra -std=c++98 -O3 -c srcs/IrcServ.cpp -o objs/IrcServ.o ; if [ $? -ne "0" ]; then exit 1; fi; norminette srcs/IrcServ.cpp > /dev/null ; if [ $? -ne "0" ]; then printf "\033[F\033[0;31m[NORM]\033[0m \033[1;35m IrcServ.cpp\033[0m\n"; else printf "\033[F\033[0;32m[OK]  \033[0m \033[1;35m IrcServ.cpp\033[0m\n"; fi;
printf "\033[0;34mCompiling \033[1;35mmain \033[0;34mfunctions\033[0m\n"
find ./objs/ -type f -exec touch {} +
printf "[..]   \033[0m \033[1;35mIrcServ.cpp \033[0m\n"; c++ -I includes -Wall -Werror -Wextra -std=c++98 -O3 -c srcs/IrcServ.cpp -o objs/IrcServ.o ; if [ $? -ne "0" ]; then exit 1; fi; norminette srcs/IrcServ.cpp > /dev/null ; if [ $? -ne "0" ]; then printf "\033[F\033[0;31m[NORM]\033[0m \033[1;35m IrcServ.cpp\033[0m\n"; else printf "\033[F\033[0;32m[OK]  \033[0m \033[1;35m IrcServ.cpp\033[0m\n"; fi;
printf "\033[0;34mCompiling \033[1;35mmain \033[0;34mfunctions\033[0m\n"
find ./objs/ -type f -exec touch {} +
printf "[..]   \033[0m \033[1;35mIrcServ.cpp \033[0m\n"; c++ -I includes -Wall -Werror -Wextra -std=c++98 -O3 -c srcs/IrcServ.cpp -o objs/IrcServ.o ; if [ $? -ne "0" ]; then exit 1; fi; norminette srcs/IrcServ.cpp > /dev/null ; if [ $? -ne "0" ]; then printf "\033[F\033[0;31m[NORM]\033[0m \033[1;35m IrcServ.cpp\033[0m\n"; else printf "\033[F\033[0;32m[OK]  \033[0m \033[1;35m IrcServ.cpp\033[0m\n"; fi;
printf "\033[0;34mCompiling \033[1;35mmain \033[0;34mfunctions\033[0m\n"
find ./objs/ -type f -exec touch {} +
printf "[..]   \033[0m \033[1;35mIrcServ.cpp \033[0m\n"; c++ -I includes -Wall -Werror -Wextra -std=c++98 -O3 -c srcs/IrcServ.cpp -o objs/IrcServ.o ; if [ $? -ne "0" ]; then exit 1; fi; norminette srcs/IrcServ.cpp > /dev/null ; if [ $? -ne "0" ]; then printf "\033[F\033[0;31m[NORM]\033[0m \033[1;35m IrcServ.cpp\033[0m\n"; else printf "\033[F\033[0;32m[OK]  \033[0m \033[1;35m IrcServ.cpp\033[0m\n"; fi;
printf "\033[0;34mCompiling \033[1;35mmain \033[0;34mfunctions\033[0m\n"
find ./objs/ -type f -exec touch {} +
printf "[..]   \033[0m \033[1;35mIrcServ.cpp \033[0m\n"; c++ -I includes -Wall -Werror -Wextra -std=c++98 -O3 -c srcs/IrcServ.cpp -o objs/IrcServ.o ; if [ $? -ne "0" ]; then exit 1; fi; norminette srcs/IrcServ.cpp > /dev/null ; if [ $? -ne "0" ]; then printf "\033[F\033[0;31m[NORM]\033[0m \033[1;35m IrcServ.cpp\033[0m\n"; else printf "\033[F\033[0;32m[OK]  \033[0m \033[1;35m IrcServ.cpp\033[0m\n"; fi;
printf "\033[0;34mLinking \033[1;35mircserv \033[0;34mexecutable\033[0m\n"
c++ -I includes objs/types.Nullptr_t.o objs/main.o objs/IrcServ.o objs/User.o objs/Logger.Logger.o objs/Logger.Output.o objs/Commands.Command.o objs/Commands.Pass.o    -Wall -Werror -Wextra -std=c++98 -O3 -o ircserv
printf "\033[0;32mCompleted\033[0m\n"
make: Leaving directory '/home/kojiki/42/local/ft_irc'
 
